{"version":3,"file":"type-utils.js","sources":["../../src/index.js"],"sourcesContent":["\n/*\n  Constants for reuse\n*/\n\nexport const FUNCTION = 'function'\nexport const STRING = 'string'\nexport const UNDEFINED = 'undefined'\nexport const BOOLEAN = 'boolean'\nexport const OBJECT = 'object'\nexport const ARRAY = 'array'\nexport const NUMBER = 'number'\nexport const noOp = () => {}\nexport const ANY = 'any'\nexport const ALL = '*'\nexport const NONE = 'none'\nexport const HIDDEN = 'hidden'\n\n/* DOM Constants */\nexport const FORM = 'form'\nexport const INPUT = 'input'\nexport const BUTTON = 'button'\nexport const SELECT = 'select'\nexport const CHANGE = 'change'\nexport const SUBMIT = 'submit'\n\n/* ────────────────────\nEnvironment checks\n─────────────────────── */\n/** @type {Object} */\nconst PROCESS = typeof process !== UNDEFINED ? process : {}\n\n/** @type {String} */\nexport const ENV = PROCESS.env?.NODE_ENV || ''\n\n/** @type {Boolean} */\nexport const isProd = ENV === 'production'\n\n/** @type {Boolean} */\nexport const isStaging = ENV === 'staging'\n\n/** @type {Boolean} */\nexport const isDev = ENV === 'development'\n\n/** @type {Boolean} */\nexport const isBrowser = typeof window !== UNDEFINED\n/** @type {Boolean} */\nexport const isLocalHost = isBrowser && window.location.hostname === 'localhost'\n\n/** @type {Boolean} */\nexport const isNode = PROCESS.versions != null && PROCESS.versions.node != null\n\n/** @type {Boolean} */\nexport const isDeno = typeof Deno !== UNDEFINED && typeof Deno.core !== UNDEFINED;\n\n/** @type {Boolean} */\nexport const isWebWorker = typeof self === OBJECT && self.constructor && self.constructor.name === 'DedicatedWorkerGlobalScope'\n\n/** @type {Boolean} */\nexport const isJsDom = (isBrowser && window.name === 'nodejs') || (typeof navigator !== UNDEFINED && (navigator.userAgent.includes('Node.js') || navigator.userAgent.includes('jsdom')))\n\n/* ────────────────────\nType checks\n─────────────────────── */\n\nexport function typeOf(type, val) {\n  return typeof val === type\n}\n\n/** \n * Check if value is function.\n * @param x\n * @return {x is Function}\n */\nexport const isFunction = typeOf.bind(null, FUNCTION)\n\n/** \n * Check if value is string.\n * @param x\n * @return {x is string}\n */\nexport const isString = typeOf.bind(null, STRING)\n\n/** \n * Check if value is undefined.\n * @param x\n * @return {x is undefined}\n */\nexport const isUndefined = typeOf.bind(null, UNDEFINED)\n\n/** \n * @param x\n * @return {x is boolean}\n */\nexport const isBoolean = typeOf.bind(null, BOOLEAN)\n\n/** \n * @param x\n * @return {x is boolean}\n */\nexport function isNull(x) {\n  return x === null\n}\n\n/** \n * Check if value is number.\n * @param n\n * @return {boolean}\n * @example\n * > isNumber(0)\n * true\n * > isNumber(1)\n * true\n * > isNumber(1.1)\n * true\n * > isNumber(0xff)\n * true\n * > isNumber(0644)\n * true\n * > isNumber(6.2e5)\n * true\n * > isNumber(NaN)\n * false\n * > isNumber(Infinity)\n * true\n */\nexport function isNumber(n) {\n  return !isNaN(parseFloat(n))\n}\n\n/** \n * Check if value is ES2015 `class`.\n * @param x\n * @return {x is Class}\n */\nexport function isClass(x) {\n  if (isFunction(x)) {\n    return /^class /.test(Function.prototype.toString.call(x))\n  }\n  return false\n}\n\n/** \n * @template T\n * @param x\n * @return {x is Array<T>}\n */\nexport function isArray(x) {\n  return Object.prototype.toString.call(x) === '[object Array]'\n}\n\nexport function isObjectLike(obj) {\n  return obj && (typeof obj === OBJECT || obj !== null)\n}\n\n/** \n * @param obj\n * @return {obj is Object}\n */\nexport function isObject(obj) {\n  if (!isObjectLike(obj)) return false\n\n  let proto = obj\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto)\n  }\n\n  return Object.getPrototypeOf(obj) === proto\n}\n\n/** \n * Is primative value\n * @param x\n * @return {boolean}\n * @example\n   isPrimitive(true) =>  true\n   isPrimitive({}) => false\n   isPrimitive(0) =>  true\n   isPrimitive('1') =>  true\n   isPrimitive(1.1) =>  true\n   isPrimitive(NaN) =>  true\n   isPrimitive(Infinity) =>  true\n   isPrimitive(function() {}) => false\n   isPrimitive(Date), => false\n   isPrimitive(null) =>  true\n   isPrimitive(undefined) =>  true\n */\nexport function isPrimitive(x) {\n  if (isNull(x)) return true\n  switch (typeof x) {\n    case STRING:\n    case NUMBER:\n    case 'symbol':\n    case UNDEFINED:\n    case BOOLEAN:\n      return true\n    default:\n      return false\n  }\n}\n\n/**\n * Returns true if the input is a Promise.\n * @param {*} input - The input to test\n * @returns {boolean}\n * @static\n */\nexport function isPromise(x) {\n  if (!x) return false\n  return !!(!isUndefined(Promise) && x instanceof Promise || x.then && isFunction(x.then))\n}\n\n/**\n * Check if value is regexp\n * @param {*} value - Value to check\n * @return {boolean} \n */\nexport function isRegex(value) {\n  return value instanceof RegExp\n}\n\n/**\n * Check if value error like (i.e has the name and message properties, both of which are strings)\n * @param obj - Object to check\n * @return {Boolean} If object is error-like\n * via https://github.com/Luke-zhang-04/utils/blob/master/src/typeGuards.ts#L62\n * @example\n *\n * ```js\n * isErrorLike(new Error()) // True\n * isErrorLike({name: \"Error!\", message: \"This is an error\", other: 0}) // True\n * isErrorLike({}) // False\n * isErrorLike({name: \"Error\", message: null}) // False\n *\n * // Works as a typguard\n * const something = {name: \"Error\", message: \"This is an error\"} as unknown\n *\n * if (isErrorLike(something)) {\n *   console.log(something.name) // No Typescript error\n * }\n * ```\n */\nexport function isErrorLike(obj) {\n  return isObjectLike(obj) && isString(obj.message) && isString(obj.name)\n}\n\n/** \n * @param func - function to check if noOp\n * @return {Boolean} - is noOp\n * @examples\n   function foo() {}\n   isNoOp(foo) // true\n   isNoOp(() => { }) // true\n   isNoOp(() => { console.log('hi') }) // false\n */\nexport function isNoOp(func) {\n  if (!isFunction(func)) return false\n  const emptyFunc = /{(\\r|\\n|\\s)*}/gm\n  const noOpStr = noOp.toString()\n  const funcString = (func.toString().match(emptyFunc) || [''])[0].replace(emptyFunc, noOpStr)\n  return noOpStr === funcString\n}\n\n/**\n * Check if value is truthy\n * @param {*} value \n * @return {Boolean} - is truthy value\n */\nexport function isTruthy(v) {\n  if (isString(v) && v.toLowerCase() === 'false') return false\n  return !!v\n}\n\n/**\n * Check if value is email\n * @param {*} str \n * @return {Boolean} - is email like value\n */\nexport function isEmail(str) {\n  if (str.length > 320) return false\n  return /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(str)\n}\n\n/**\n * Check if value is ISO date e.g. '2022-01-02T06:45:28.547Z'\n * @param {*} str\n * @return {Boolean} - is email like value\n */\nexport function isIsoDate(str) {\n  return /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)$/.test(str)\n}\n\n/* ────────────────────\nHTML Element checks\n─────────────────────── */\n\n/** \n * @param obj\n * @return {obj is NodeList}\n */\nexport function isNodeList(obj) {\n  return NodeList.prototype.isPrototypeOf(obj)\n}\n\n/**\n * Check if input is DOM element\n * @param {HTMLElement|*} element\n * @return {boolean} \n */\nexport function isElement(element, type) {\n  const isEl = element instanceof Element || element instanceof HTMLDocument\n  if (!isEl || !type) return isEl\n  return isNodeType(element, type)\n}\n\n/**\n * Check if element is specific DOMNode type\n * @param {HTMLElement|*} element\n * @param {String} type\n * @return {boolean}\n */\nexport function isNodeType(element, type = '') {\n  return element && element.nodeName === type.toUpperCase()\n}\n\nfunction bindArgs(fn, ...boundArgs) {\n  return function(...args) {\n    return fn(...args, ...boundArgs)\n  }\n}\n\n/**\n * Check if element is form element\n * @param {HTMLElement} element\n * @return {boolean} \n */\nexport const isForm = bindArgs(isElement, FORM)\n\n/**\n * Check if element is button element\n * @param {HTMLElement} element\n * @return {boolean} \n */\nexport const isButton = bindArgs(isElement, BUTTON)\n\n/**\n * Check if element is input element\n * @param {HTMLElement} element\n * @return {boolean} \n */\nexport const isInput = bindArgs(isElement, INPUT)\n\n/**\n * Check if element is select element\n * @param {HTMLElement} element\n * @return {boolean} \n */\nexport const isSelect = bindArgs(isElement, SELECT)\n\n/**\n * Check if DOM element is hidden\n * @param {HTMLElement|null|undefined} element\n * @param {HTMLElement|null|undefined} until\n * @return {boolean}\n */\nexport function isHidden(element, until) {\n  if (!element || getComputedStyle(element).visibility === HIDDEN) return true\n\n  while (element) {\n    if (until != null && element === until) return false\n    if (getComputedStyle(element).display === NONE) return true\n    element = element.parentElement\n  }\n\n  return false\n}"],"names":["FUNCTION","STRING","UNDEFINED","BOOLEAN","OBJECT","NUMBER","noOp","NONE","HIDDEN","PROCESS","process","ENV","env","NODE_ENV","isProd","isStaging","isDev","isBrowser","window","isLocalHost","location","hostname","isNode","versions","node","isDeno","Deno","core","isWebWorker","self","constructor","name","isJsDom","navigator","userAgent","includes","typeOf","type","val","isFunction","bind","isString","isUndefined","isBoolean","isNull","x","isObjectLike","obj","isElement","element","isEl","Element","HTMLDocument","isNodeType","nodeName","toUpperCase","bindArgs","fn","isForm","isButton","isInput","isSelect","Object","prototype","toString","call","test","Function","str","length","message","until","getComputedStyle","visibility","display","parentElement","func","emptyFunc","noOpStr","match","replace","NodeList","isPrototypeOf","n","isNaN","parseFloat","proto","getPrototypeOf","Promise","then","value","RegExp","v","toLowerCase"],"mappings":"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"}