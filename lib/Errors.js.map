{"version":3,"sources":["../src/Errors.js"],"names":["Errors","message","Error","Object","freeze","testError","appConfigInvalid","versionConfigInvalid","debugConfigInvalid","pluginsConfigInvalid","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAMA,M;;;;;;;;;;;;;;AAEF;AACJ;AACA;AACA;AACI,yBAAmBC,OAAnB,EAA4B;AAC1B,aAAO,IAAIC,KAAJ,CAAUD,OAAV,CAAP;AACD;AAED;AACJ;AACA;AACA;;;;SACI,eAAmB;AACjB,aAAOE,MAAM,CAACC,MAAP,CAAc;AACnBC,QAAAA,SAAS,EAAE,IAAIH,KAAJ,CAAU,uBAAV,CADQ;AAEnBI,QAAAA,gBAAgB,EAAE,IAAIJ,KAAJ,CAAU,oEAAV,CAFC;AAGnBK,QAAAA,oBAAoB,EAAE,IAAIL,KAAJ,CAAU,wEAAV,CAHH;AAInBM,QAAAA,kBAAkB,EAAE,IAAIN,KAAJ,CAAU,uEAAV,CAJD;AAKnBO,QAAAA,oBAAoB,EAAE,IAAIP,KAAJ,CAAU,mFAAV;AALH,OAAd,CAAP;AAOD;;;;iCAtBgBA,K;;AAyBnBQ,MAAM,CAACC,OAAP,GAAiBX,MAAjB","sourcesContent":["class Errors extends Error {\n\n    /**\n     * Creates a custom error.\n     * @param {String} message The error message.\n     */\n    static customError(message) {\n      return new Error(message);\n    }\n  \n    /**\n     * The preset errors.\n     * errorType: new Error('ApiAnalyticsAdapter: My error message.'),\n     */\n    static get Error() {\n      return Object.freeze({\n        testError: new Error('Testing custom error.'),\n        appConfigInvalid: new Error('Invalid configuration parameter pass to \"app\", expecting a String.'),\n        versionConfigInvalid: new Error('Invalid configuration parameter pass to \"version\", expecting a String.'),\n        debugConfigInvalid: new Error('Invalid configuration parameter pass to \"debug\", expecting a Boolean.'),\n        pluginsConfigInvalid: new Error('Invalid configuration parameter pass to \"plugins\", expecting a AnalyticsPlugin[].')\n      });\n    }\n  }\n  \n  module.exports = Errors;"],"file":"Errors.js"}