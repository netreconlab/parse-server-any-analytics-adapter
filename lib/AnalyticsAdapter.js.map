{"version":3,"sources":["../src/AnalyticsAdapter.js"],"names":["AnalyticsAdapter","parameters","req","Promise","resolve","eventName","module","exports"],"mappings":";;;;;;;;AAAA;;AAEA;AACA;AACA;;AACA;AACA;AACA;IACOA,gB;;;;;;;;AACH;AACJ;AACA;AACA;AACI,uBAAUC,UAAV,EAAsBC,GAAtB,EAA2B;AACzB,aAAOC,OAAO,CAACC,OAAR,CAAgB,EAAhB,CAAP;AACD;AAED;AACJ;AACA;AACA;AACA;;;;WACI,oBAAWC,SAAX,EAAsBJ,UAAtB,EAAkCC,GAAlC,EAAuC;AACrC,aAAOC,OAAO,CAACC,OAAR,CAAgB,EAAhB,CAAP;AACD;;;;;;AAGHE,MAAM,CAACC,OAAP,GAAiBP,gBAAjB","sourcesContent":["/*eslint no-unused-vars: \"off\"*/\n\n/**\n * @module Adapters\n */\n/**\n * @interface AnalyticsAdapter\n */\n class AnalyticsAdapter {\n    /**\n    @param {any} parameters: the analytics request body, analytics info will be in the dimensions property\n    @param {Request} req: the original http request\n     */\n    appOpened(parameters, req) {\n      return Promise.resolve({});\n    }\n  \n    /**\n    @param {String} eventName: the name of the custom eventName\n    @param {any} parameters: the analytics request body, analytics info will be in the dimensions property\n    @param {Request} req: the original http request\n     */\n    trackEvent(eventName, parameters, req) {\n      return Promise.resolve({});\n    }\n  }\n  \n  module.exports = AnalyticsAdapter;"],"file":"AnalyticsAdapter.js"}